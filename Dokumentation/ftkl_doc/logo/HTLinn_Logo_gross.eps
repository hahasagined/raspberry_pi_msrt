%!PS-Adobe-2.0 EPSF-1.2%%Title: HTLinn_Logo%%Creator: FreeHand MX 11.0.1%%CreationDate: 31.05.2006 17:35 Uhr%%BoundingBox: 0 0 503 502%%FHPathName:BigGrey:Users:lg:Desktop:HTLinn_Logo:HTLinn_Logo%ALDOriginalFile:BigGrey:Users:lg:Desktop:HTLinn_Logo:HTLinn_Logo%ALDBoundingBox: -60 -213 552 579%%FHPageNum:1%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%EndComments%%BeginAGDEmbeddedDoc: version 1.0%:s8W,W5t==$^::es!!!<gGQG3SHZ53N('!YRg!'W9UTd"QGn>>&%:s8V\k817RCBppD@$J&t76VW+g"KIa0-G+p_Gr:Y[TiG0MZrO3H<"rOe's%\T^dghfN\g[n+!%4WM)(+N9ZqMtVLReO*MhDl^N8hV]DI!_.=^R;q7^q=3VT'@46N44p_H.h__rd%`8;+m+KYeJEj_^l,QXl:bs'Sf5muDO$U]`D%so]7nRma,<Ej"4Y*B:76NK)DX.R.tWnk\B76f,lEb"9Da0lU(L$Vs@m3W,4Y`<*\fg(#5'HQ`t%:5!V;Ii^K.X/MG/d*&Vu[>*^BjB?N\SHB)7+@J^%RM6l22cJ!DeXp;1m<f6YdlAq2qPiEO`<CFGT:lLg0L"V?;;CNM-)*\Y*^R!LXVULl-)PNL4Ipo1PkG?TiYi:=t#ujC)Hnq6N>.KlgY;qmO_NkVOK)[2hK0*Z7k>7lY5%%Xe;i9eH\28aT&`<VhJ=+PXK:.7/c#D7NRVV0[$;O<2X.QC]RD&\dAc,VKC/49g;GD551gr@84?R&o%:DuVMoXZHGi>l36mani4f1YfV*jLWg?,I<SCD93M[:Mi%TXNP58PY1DfS?4RdXd2^%:2Mq3aV@0+3@VXINkXhr;6uJ$,fTo.:SkPRHR;VsZHS9Tb,(;_@CVLi1?)Frj'/?m3picDh:cTfkGL4p;\Q./SZkER;sg\Qorf"UP#P.M673ms8@ajOpon^I])ct-%oLQk!cECkOZ-a:a$DYnpRB)_VND7&:fGNE-keTu,.O*\*BZNs<+-s]%:0u04t,,J=TH3Y#(l=u<L87fI,eE]LAFVa4TKI,8=k1-__+YM8=4R<3GN#BKA'7^M:YZEKSk3Q2uplG9["F*Q6cC7@*8(]9nUQh+%<!hE61>Ihb+u^f-8GpG$Z/J+.g3@Y2Z)=q+NtOU+O2"8Ec8qB6hc,ZuR$;+G(+dB#N"pc%P$<SK4T6X]$2W8iB995Tjib%BmF(,(]Kb"#"#Y=/,MpQTbLIQ&H]6rB[5q$a<j;!%IUular8$V%%:eLFb)<X#D_)RZZJ_X45"d5B<(,^P6=NjZF_FXJgcrQGB65H1&MVDGl?oq]j7)RW"uZrW4l4f$nIf,KFo`4I@k"@b]:^(ieiG'lX35G1/"?QASGI*fgbBjYM+5/\$t9V&fZX7`!OCRl3A'<CBiV+Zr,RobHtV+UeK)f39MGdK](dJat=Y_akG]V#O&.1u,IO<8dg?2e'k?hI>F3n/C?76+=802_c)Jc#CF7-F9ic*+-r_+t77dD]eN%:o&ZcFn([$p05&"jjs`TV3?u<SS*U#b`@8!&@_G;%1FG<[,L9HKP5j+I^\b"J5IkQl21I7)Y:eYqVpl&\i;Jc^58F)@,68R8Iq453b-fE*Mac@b_65r89"#?3]o'SGLHg0[\N4c6BWn%'K`hS=D'\p\S"ES/Eb*)@8GN+`IVQ0o\bYGdLL1/<%$:&eMuPsOr_H]MYatRX=8]][HK(Q(5JA`lMk9W@M1>*`"e$]#3Yb2D5Pacm&M1:m%:MEck7r6(CCg6@MFfeOo!-L@s-@ikPb)>rm?+'8@rr:olDPst8hhN@9%;hLUW2?/hYD8C_lin2oKeIMVuMnms^5gE,_[)7NG<sF/;p`E?1`I@`jIWH:&>HEGV'kVLam@4&rlD\cJrD`9QQDRPAFu]DrV*HL6OOIp+G'WS$BCPX,J$7k(3>qh<(TDJp:W9a0K*.9ZIO_(-/T'Jh*tPY:r8Zg"(&:/98'YTnr>tk=L<6opi"%:9371\5%:=[)c8*0*ShYkqP`R4Gt".Ni;bjs7EO;rlh[>arh*q+)Cb9r\@=a/=.pmDaeVXC%#Yald6"C\(uc1:nt3%MO2B-]*5\GOm7N-$qK>OY]6Zp>?Ng?($$JIYX3TFZ]#e?(M[4jPqV7;u'+1%%^CijfMqAqS$)#Y%2n&^i3pqA#q2S>18:BURmr\4K1F8lu]_+'L%;c`%Y[fO#$.%$$mdO&444!`5;[lef^*i"U'\[$*f3IIM_nTRa$Js%:Zb;H1L#d\d4<'=``OqU2.:.l8VFI1qiia!2csgtgT(e]EKCc5QNET,QF%u*OrEXZ8r1s[p6s]u.cBT=0c/9lhJC,\WO6@?Pj&U*-V$!%0OebAU-j`?R@R")Cg=@_$@.XjKj86<1Js,_+mk<As;1fM/2lt"`7:Z=;I"Aa>F&*dlkOD!3WVO3-HY;V:Ssanf2h3p&GaIr4,Bq6f]iW2G51u('rFO:&;m^!5aPkad4rh@(c?W0VS2YSE%:0aC0.)`QR&dluELkT4CWllYHUg6t\Dai%`4<GQ_!T#OiO.)Y4,`]^U+JOEi_F-BOLgWRp^P)&`AVpclON3@JSiPice.f-e9nV5JA,^phk]^meS/j.sAZ>"e'LEh9oTP7NHs'Z]7>+[6c!-fj>A0ole-V6)IFQPS65DX7B7;36L`-_#g/r6^XrNG2GiN_$tnCW\dfoK>=b;XC-5<OjBiWu:m6saf5,N80!DP+'OA`]:pfFuf:LGL9B%:0(08="hHBt@q'-M?o">;hb96.jQ?EQ30*Gh/#8s8T!mi8D4Y-`+nK,'h[&,[(.TcU)V3+_=W+B(^*PX&c.eC=+^HB?Z85=lUe.?fQ8Iq)6%"I#8$238l39nQ^r^EF!e2D[+<nLIa_jkM=CDVaV']t8bSt5I/)#B[KM]Tl\T_\\Dr"fF]6I;.<pi`oBdR070,hr(]*%^!``q0o&d^^!_XqLV.QHP'bh-rb=]Fl,f+t-(GH?3s8n=q?%:Z9-o!e<8U^d@,pBX&bKeA4g!16Z/s1WijXrY,KQ]b88L+->"Xq8j^"oa#_a%B4cI$GsuR;9jN0QD*u"HahG*&qDN@C)#nkb<Al\`Pugsd<S,i&eCR`c<AkE/WZ%nh<]&=V8W4"3P22U5pse/BY1Mp>I2bDd%nV8(+6+&1j!XUNIYOKT7Jm4"n4T:jR)F>EZHJSUJQE[mi-G5-^K-8_jn(W<dhb4S:uK&0Z><'4R#FjRV-8uijl:%l%:]p6n`5%9d'Y`c1OZ0''DHW/A4D`#_KW<4+=$R6W\D?)!bG6!grBl%?h@VfTU!_>^fFCeEcD.N\Je5etO@rq\OcrF"dEbTE(!!+cMATDj2ARfgrG%F0aBk.2FF[:+kEbT!*FCe!]Ch.*t!!*9uE)0qXARff^!;T>fFE2)5B)hr$9h]8BF8u=,9gi]*F8u;q7S#pc@n:0>A7]c]!`24(F`V4iBle@r!^Tb1D.7F"9PIsV@<-Vn55,1E%:!.@:PASl!rF8u;#6>URMCB+Ce<_[O/@VPlDVGpu5<+06PAH2]>5t==4Df0Xs!G##IDfABkF8u>L:i^JaARoq(AH2dR7ri$WBPCsTFEq\6!!#\[Des?42?3a&9PJBU:gnGG!8'tZF*%B^o1_tgD.N\I01')gBk'VHChs(O0LB2hBk'hNDIieJGsuO\D+nYbF8uAd6Z6jaASuTZBl%Sc!0BZaB6A6+!!/<_FEq\6:i^Jn9QP:UJF;e@%:!3\n8Bk1dr!!/0[E,ThcDes?42?3bN:gnHZ!!'r2@<lF)!!#VYDes6$@ruX0!!&ugEc6)>!!"B4EcQ)B:gnHZ!!!!!^]Dd_O9*]/O9*]/O9!o5c2c,ic2c,ic2c,ic2c,ic2c,ifDm9!-NGLo-NGLo-NGLofE'>"O9*]/O9*]/O9*]/O9*]/O9!o5n,W%[9EK;9n,^l9_uT9,9EK;9n,UB,n,Q,`F9(e3F9&KEn,^l9_uT9,U?WDV%:9EK;9n,^l9_uT9,9EK;;G62men,d\39E6^IFTCn4F9,#79E6^IFTCn4F9,#79E6^IFTCn4F9,#79E6^IFTCn4F9,#79E6^IFTCn4F9,#79E6^IFTCn4F9,#79E6^IFTCn4F9,#79E6^IFTCn4F9,#7n,TEfn,^l9_uSEi0EQ@sn,W%\ciS:iciEY<V>r7Mci=LUciM`!PQ3B=FTCn3ciS:hfE-0qn,W%[n,d\3fE!Z+n,c,^TuI2Q%:5lsjaFTCn4F9"9#o)S7]F9&KGFTCn2o)a"6n,TEgf)Y:?o)S@_ciEY<ciEY<ciEY;q#L!dq#L!dq#L!eciIYWo)S7[L.5ufFCdjO@rGmh!<<*!rr<$!d*UUZ%:~>%%EndAGDEmbeddedDoc%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{dup where not{AltsysSepDict}if 3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{/cntr 0 def2 copy readstring{{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop}ifcntr 0 gt{pop 2 copydup length cntr sub cntr getintervalreadbinarystring} ifpop exch pop} bdf/_NXLevel2 defed { _NXLevel2 not { /colorimage where {userdict eq {/_rci false def } if} if} if} if/md defed{ md type /dicttype eq { /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if}if }if/setstrokeadjust defed{true setstrokeadjust/C{curveto}bdf/L{lineto}bdf/m{moveto}bdf}{/dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/setstrokeadjust{pop}bdf }ifelse/privrectpath { 4 -2 roll mdtransform round exch round exch idtransform 2 copy 0 lt exch 0 lt xor{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}ifelseclosepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed {/_bfh {/_fonthacksave currentpacking def false setpacking} bdf/_efh {_fonthacksave setpacking} bdf}{/_bfh {} bdf/_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` { false setoverprint /-save0- save def5 index concatpopstorerect left bottom width height rectclippop/MMdict_count countdictstack def/MMop_count count 1 sub defuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath} bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1 statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelseend def/printerRes gsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/graycalcs[{Angle Frequency} {GrayAngle GrayFrequency} {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps {forcemaxsteps{maxsteps}{/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelseprinterRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if }ifelse} bdf/nextrelease defed { /languagelevel defed not { /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if}if}iffhnumcolors 1 ne {/calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {currentpagedevice /PreRenderingEnhance known{currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if} if} if/gradfrequency 144 defprinterRes 1000 lt {/gradfrequency 72 def} if/adjnumsteps {dup dtransform abs exch abs max printerRes div gradfrequency mul round 5 max min }bdf/goodsep {spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted? 0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{systemdict /packedarray known {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{ /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{ /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/i{dup 0 eq{pop df dup} {dup} ifelse /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{ {/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{/NF exch def { exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length /Len exch def dup length Len add string dup Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{ dup FontDirectory exch known {pop 3 -1 roll pop} {RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf/RCJ{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFJ{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCJ} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFJ{dup hasfont not { pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse }if}bdf/FFJ{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get dup length 256 eq{256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }{7 -1 roll pop pop pop pop pop findfont}ifelse}ifelse_efh}bdf/GS {dup hasfont {findfontexch makesetfontexchpopts}{pop pop popts} ifelse} bdf/RCK{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFK{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCK} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFK{dup hasfont not { pop/JCsmhasfont {/JCsm}{/Courier}ifelse }if}bdf/FFK{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCTC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFTC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCTC} ifelse}bdf/FDFTC{dup hasfont not { pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse }if}bdf/FFTC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCSC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFSC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFSC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCSC} ifelse}bdf/FDFSC{dup hasfont not { pop/zh-gbscript-1.11hasfont {/zh-gbscript-1.11}{/Courier}ifelse }if}bdf/FFSC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFSC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/fps{currentflat exch dup 0 le{pop 1}if {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse}loop pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont {/Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 muladd add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor { max max max } ndf/maxspot {pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{0 1 2 index length 1 sub{ 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put}for4 1 roll pop pop pop}bdf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image}ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{aload pop (_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage}ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage}ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor { spots exch getdup 4 get (_vc_Registration) eq{pop 1 exch sub setseparationgray}{0 5 getinterval exch setcustomcolor}ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdfuserdict /islevel2systemdict /languagelevel known dup{pop systemdict /languagelevel get 2 ge} ifputislevel2 not{/currentcmykcolor{0 0 0 1 currentgray sub} ndf} if/tc{gsavesetcmykcolor currentcmykcolorgrestore} bind def/testCMYKColorThrough{tc add add add 0 ne} bind def/fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput}{ pop }ifelse/bc4 [0 0 0 0] def /_lfp4 {1 pop /yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdfc1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round height abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/bcs [0 0] def /_lfs4 {/yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/tint2 xdf /tint1 xdf bcs exch 1 exch put tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round height abs adjnumsteps dup 2 lt {pop 2} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfs6 {/tint2 xdf /tint1 xdf bcs exch 1 exch put /inrad xdf /radius xdf /yt xdf /xt xdf tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfp6 {1 pop /k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdf/inrad xdf /radius xdf /yt xdf /xt xdf c1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{AltsysDict /cvc 2 index put aload length dup 4 eq{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}{6 eq {sethexcolor} {setspotcolor} ifelse }ifelse}bdf 0 setseparationgray/imgr {1692 1584 2304 2376 } def /bleed 0 def /clpr {1692 1584 2304 2376 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def userdict begin /AGDOrigMtx matrix currentmatrix def end vms-1752 -1797 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor]defn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1]vcvms2051.7159 2298.8316 m2051.7159 2198.265 L2252 1998.5483 L2254.5237 2098.2018 L2051.7159 2298.8316 L[0 0.1059 0.9725 0]vcf n1953.1998 2298.5153 m2051.7159 2298.8316 L1852.8523 2099.1148 L1752 2099.1148 L1953.1998 2298.5153 L[0.8392 0.302 0.4863 0]vcf n1752.3172 1998.045 m1752 2099.1148 L1953.1998 1897.8882 L1952.2841 1798.8316 L1752.3172 1998.045 L[0.4823 0.9961 0.9961 0]vcf n2104.8331 2048.1234 m2153.9886 1998.5483 L1952.2841 1798.8316 L1952.2841 1897.9817 L2104.8331 2048.1234 L[1 0.6823 0.3608 0]vcf n2053.6411 1797.7314 m1952.2841 1798.8316 L2153.9886 1998.5483 L2252 1998.5483 L2053.6411 1797.7314 L[1 0.847 0.6902 0]vcf n2051.7159 2198.265 m2002 2148.9888 L2153.9886 1998.5483 L2252 1998.5483 L2051.7159 2198.265 L[0.1294 0.2627 0.7686 0]vcf n2051.7159 2298.8316 m2051.7159 2198.265 L1902.5682 2048.1234 L1852.8523 2099.1148 L2051.7159 2298.8316 L[0.8863 0.498 0.6235 0]vcf n1852.8523 2099.1148 m2003.4205 1947.9666 L1952.2841 1897.9817 L1752 2099.1148 L1852.8523 2099.1148 L[0.1647 0.9921 0.9921 0]vcf nvmrvmrend%%Trailer